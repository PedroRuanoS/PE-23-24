set.seed(2255)
# Number of simulations
simulations <- 150
# Function to simulate a single system state
simulate_system <- function() {
signals <- sample(1:10, size = 9, replace = TRUE, prob = (1:10)/55)
if (2 %in% signals) {
return(TRUE)  # Audible warning produced
} else if (1 %in% signals) {
return(FALSE)  # System shut down
} else {
return(TRUE)  # No audible warning produced and system not shut down
}
}
# Simulate system states
system_states <- replicate(simulations, simulate_system())
# Calculate proportion of times an audible warning is produced in a system that is not shut down
warning_proportion <- mean(system_states)
warning_proportion
set.seed(2255)
# Number of simulations
simulations <- 150
# Function to simulate a single system state
simulate_system <- function() {
signals <- sample(1:10, size = 9, replace = TRUE, prob = (1:10)/55)
if (2 %in% signals) {
if (1 %in% signals) {
return(FALSE)  # System shut down
} else {
return(TRUE)  # Audible warning produced but system not shut down
}
} else {
return(FALSE)  # No audible warning produced
}
}
# Simulate system states
system_states <- replicate(simulations, simulate_system())
# Calculate proportion of times an audible warning is produced in a system that is not shut down
warning_proportion <- mean(system_states)
warning_proportion
# Observed data
data <- c(9.71, 8.97, 8.21, 10.72, 9.32, 12.37, 5.97, 10.12, 7.77, 7.90, 7.58, 6.46, 10.93, 10.22, 9.74, 8.32, 11.15, 11.67, 7.48, 13.42, 9.67, 8.70, 4.57, 8.19, 9.32, 5.70, 4.83, 6.03, 7.46, 6.91, 10.89, 9.87, 10.67, 8.15, 10.40, 9.47, 7.20, 11.86, 9.42, 8.14, 7.97, 9.27, 11.55, 9.91, 11.66, 11.17, 5.39, 13.11, 11.50, 11.15, 10.38, 7.99, 8.97, 7.62, 6.72, 9.76, 7.59, 12.63, 8.56, 10.87, 10.78, 9.69, 9.97, 6.99, 11.11, 8.16, 10.77, 9.23, 11.10, 5.88, 10.63, 8.82, 5.24, 9.90, 4.76, 11.30, 10.70, 11.49, 7.36, 10.85, 7.57, 4.24, 5.46, 8.24, 9.54, 9.65, 7.47, 9.11, 8.93, 9.43, 7.07, 10.46, 10.57, 6.02, 9.68, 10.09, 9.85, 6.29, 8.12, 9.37, 7.63, 8.80, 8.75, 6.47, 10.22, 8.70, 7.52, 13.12, 4.92, 6.37, 6.28, 8.21, 8.59, 5.09, 7.29, 8.24, 9.03, 9.78, 6.29, 7.12, 7.58, 10.27, 7.22, 11.82, 7.07, 6.88, 7.06, 7.20, 8.24, 11.20, 8.31, 12.78, 8.46, 5.96, 5.37, 8.55, 7.71, 9.61, 11.52, 10.50, 8.98, 10.53, 7.24, 5.58, 7.60, 7.91, 9.46, 7.77, 6.40, 6.40, 9.77, 7.71, 10.61, 7.15, 7.96, 6.50, 9.48, 9.46, 5.52, 11.76, 10.22, 9.69, 9.17, 8.45, 5.15, 8.80, 5.51, 9.70, 10.23, 6.52, 6.96, 10.98, 8.07, 9.84, 9.50, 7.55, 12.55, 11.84, 11.50, 7.41)
# Constants
a <- 3.5
b <- 14
k <- 8
# Calculate class width
class_width <- (b - a) / k
# Define class intervals
class_intervals <- seq(a, b, by = class_width)
class_intervals <- cbind(class_intervals, c(class_intervals[-1], Inf))
# Frequency table
freq_table <- table(cut(data, breaks = class_intervals, right = FALSE))
install.packages("EnvStats")
library(EnvStats)
dados <- c(9.71, 8.97, 8.21, 10.72, 9.32, 12.37, 5.97, 10.12, 7.77, 7.90, 7.58, 6.46, 10.93, 10.22, 9.74, 8.32, 11.15, 11.67, 7.48, 13.42, 9.67, 8.70, 4.57, 8.19, 9.32, 5.70, 4.83, 6.03, 7.46, 6.91, 10.89, 9.87, 10.67, 8.15, 10.40, 9.47, 7.20, 11.86, 9.42, 8.14, 7.97, 9.27, 11.55, 9.91, 11.66, 11.17, 5.39, 13.11, 11.50, 11.15, 10.38, 7.99, 8.97, 7.62, 6.72, 9.76, 7.59, 12.63, 8.56, 10.87, 10.78, 9.69, 9.97, 6.99, 11.11, 8.16, 10.77, 9.23, 11.10, 5.88, 10.63, 8.82, 5.24, 9.90, 4.76, 11.30, 10.70, 11.49, 7.36, 10.85, 7.57, 4.24, 5.46, 8.24, 9.54, 9.65, 7.47, 9.11, 8.93, 9.43, 7.07, 10.46, 10.57, 6.02, 9.68, 10.09, 9.85, 6.29, 8.12, 9.37, 7.63, 8.80, 8.75, 6.47, 10.22, 8.70, 7.52, 13.12, 4.92, 6.37, 6.28, 8.21, 8.59, 5.09, 7.29, 8.24, 9.03, 9.78, 6.29, 7.12, 7.58, 10.27, 7.22, 11.82, 7.07, 6.88, 7.06, 7.20, 8.24, 11.20, 8.31, 12.78, 8.46, 5.96, 5.37, 8.55, 7.71, 9.61, 11.52, 10.50, 8.98, 10.53, 7.24, 5.58, 7.60, 7.91, 9.46, 7.77, 6.40, 6.40, 9.77, 7.71, 10.61, 7.15, 7.96, 6.50, 9.48, 9.46, 5.52, 11.76, 10.22, 9.69, 9.17, 8.45, 5.15, 8.80, 5.51, 9.70, 10.23, 6.52, 6.96, 10.98, 8.07, 9.84, 9.50, 7.55, 12.55, 11.84, 11.50, 7.41)
k <- 8
probs <- 0:k / k
limites <- qtri(probs, min = 3.5, max = 14, mode = (3.5 + 14)/2)
classes <- cut(dados, breaks = limites)
freq_observadas <- table(classes)
probs <- rep(1 / k, k)
solution <- chisq.test(freq_observadas, p = probs)$p.value
solution
library(EnvStats)
dados <- c(9.71, 8.97, 8.21, 10.72, 9.32, 12.37, 5.97, 10.12, 7.77, 7.90, 7.58, 6.46, 10.93, 10.22, 9.74, 8.32, 11.15, 11.67, 7.48, 13.42, 9.67, 8.70, 4.57, 8.19, 9.32, 5.70, 4.83, 6.03, 7.46, 6.91, 10.89, 9.87, 10.67, 8.15, 10.40, 9.47, 7.20, 11.86, 9.42, 8.14, 7.97, 9.27, 11.55, 9.91, 11.66, 11.17, 5.39, 13.11, 11.50, 11.15, 10.38, 7.99, 8.97, 7.62, 6.72, 9.76, 7.59, 12.63, 8.56, 10.87, 10.78, 9.69, 9.97, 6.99, 11.11, 8.16, 10.77, 9.23, 11.10, 5.88, 10.63, 8.82, 5.24, 9.90, 4.76, 11.30, 10.70, 11.49, 7.36, 10.85, 7.57, 4.24, 5.46, 8.24, 9.54, 9.65, 7.47, 9.11, 8.93, 9.43, 7.07, 10.46, 10.57, 6.02, 9.68, 10.09, 9.85, 6.29, 8.12, 9.37, 7.63, 8.80, 8.75, 6.47, 10.22, 8.70, 7.52, 13.12, 4.92, 6.37, 6.28, 8.21, 8.59, 5.09, 7.29, 8.24, 9.03, 9.78, 6.29, 7.12, 7.58, 10.27, 7.22, 11.82, 7.07, 6.88, 7.06, 7.20, 8.24, 11.20, 8.31, 12.78, 8.46, 5.96, 5.37, 8.55, 7.71, 9.61, 11.52, 10.50, 8.98, 10.53, 7.24, 5.58, 7.60, 7.91, 9.46, 7.77, 6.40, 6.40, 9.77, 7.71, 10.61, 7.15, 7.96, 6.50, 9.48, 9.46, 5.52, 11.76, 10.22, 9.69, 9.17, 8.45, 5.15, 8.80, 5.51, 9.70, 10.23, 6.52, 6.96, 10.98, 8.07, 9.84, 9.50, 7.55, 12.55, 11.84, 11.50, 7.41)
k <- 8
probs <- 0:k / k
limites <- dtri(probs, min = 3.5, max = 14, mode = (3.5 + 14)/2)
classes <- cut(dados, breaks = limites)
library(EnvStats)
dados <- c(9.71, 8.97, 8.21, 10.72, 9.32, 12.37, 5.97, 10.12, 7.77, 7.90, 7.58, 6.46, 10.93, 10.22, 9.74, 8.32, 11.15, 11.67, 7.48, 13.42, 9.67, 8.70, 4.57, 8.19, 9.32, 5.70, 4.83, 6.03, 7.46, 6.91, 10.89, 9.87, 10.67, 8.15, 10.40, 9.47, 7.20, 11.86, 9.42, 8.14, 7.97, 9.27, 11.55, 9.91, 11.66, 11.17, 5.39, 13.11, 11.50, 11.15, 10.38, 7.99, 8.97, 7.62, 6.72, 9.76, 7.59, 12.63, 8.56, 10.87, 10.78, 9.69, 9.97, 6.99, 11.11, 8.16, 10.77, 9.23, 11.10, 5.88, 10.63, 8.82, 5.24, 9.90, 4.76, 11.30, 10.70, 11.49, 7.36, 10.85, 7.57, 4.24, 5.46, 8.24, 9.54, 9.65, 7.47, 9.11, 8.93, 9.43, 7.07, 10.46, 10.57, 6.02, 9.68, 10.09, 9.85, 6.29, 8.12, 9.37, 7.63, 8.80, 8.75, 6.47, 10.22, 8.70, 7.52, 13.12, 4.92, 6.37, 6.28, 8.21, 8.59, 5.09, 7.29, 8.24, 9.03, 9.78, 6.29, 7.12, 7.58, 10.27, 7.22, 11.82, 7.07, 6.88, 7.06, 7.20, 8.24, 11.20, 8.31, 12.78, 8.46, 5.96, 5.37, 8.55, 7.71, 9.61, 11.52, 10.50, 8.98, 10.53, 7.24, 5.58, 7.60, 7.91, 9.46, 7.77, 6.40, 6.40, 9.77, 7.71, 10.61, 7.15, 7.96, 6.50, 9.48, 9.46, 5.52, 11.76, 10.22, 9.69, 9.17, 8.45, 5.15, 8.80, 5.51, 9.70, 10.23, 6.52, 6.96, 10.98, 8.07, 9.84, 9.50, 7.55, 12.55, 11.84, 11.50, 7.41)
k <- 8
probs <- 0:k / k
limites <- ptri(probs, min = 3.5, max = 14, mode = (3.5 + 14)/2)
classes <- cut(dados, breaks = limites)
library(EnvStats)
dados <- c(9.71, 8.97, 8.21, 10.72, 9.32, 12.37, 5.97, 10.12, 7.77, 7.90, 7.58, 6.46, 10.93, 10.22, 9.74, 8.32, 11.15, 11.67, 7.48, 13.42, 9.67, 8.70, 4.57, 8.19, 9.32, 5.70, 4.83, 6.03, 7.46, 6.91, 10.89, 9.87, 10.67, 8.15, 10.40, 9.47, 7.20, 11.86, 9.42, 8.14, 7.97, 9.27, 11.55, 9.91, 11.66, 11.17, 5.39, 13.11, 11.50, 11.15, 10.38, 7.99, 8.97, 7.62, 6.72, 9.76, 7.59, 12.63, 8.56, 10.87, 10.78, 9.69, 9.97, 6.99, 11.11, 8.16, 10.77, 9.23, 11.10, 5.88, 10.63, 8.82, 5.24, 9.90, 4.76, 11.30, 10.70, 11.49, 7.36, 10.85, 7.57, 4.24, 5.46, 8.24, 9.54, 9.65, 7.47, 9.11, 8.93, 9.43, 7.07, 10.46, 10.57, 6.02, 9.68, 10.09, 9.85, 6.29, 8.12, 9.37, 7.63, 8.80, 8.75, 6.47, 10.22, 8.70, 7.52, 13.12, 4.92, 6.37, 6.28, 8.21, 8.59, 5.09, 7.29, 8.24, 9.03, 9.78, 6.29, 7.12, 7.58, 10.27, 7.22, 11.82, 7.07, 6.88, 7.06, 7.20, 8.24, 11.20, 8.31, 12.78, 8.46, 5.96, 5.37, 8.55, 7.71, 9.61, 11.52, 10.50, 8.98, 10.53, 7.24, 5.58, 7.60, 7.91, 9.46, 7.77, 6.40, 6.40, 9.77, 7.71, 10.61, 7.15, 7.96, 6.50, 9.48, 9.46, 5.52, 11.76, 10.22, 9.69, 9.17, 8.45, 5.15, 8.80, 5.51, 9.70, 10.23, 6.52, 6.96, 10.98, 8.07, 9.84, 9.50, 7.55, 12.55, 11.84, 11.50, 7.41)
k <- 8
probs <- 0:k / k
limites <- rtri(probs, min = 3.5, max = 14, mode = (3.5 + 14)/2)
classes <- cut(dados, breaks = limites)
freq_observadas <- table(classes)
probs <- rep(1 / k, k)
solution <- chisq.test(freq_observadas, p = probs)$p.value
solution
limites <- qtri(probs, min = 3.5, max = 14, mode = (3.5 + 14)/2)
library(EnvStats)
dados <- c(9.71, 8.97, 8.21, 10.72, 9.32, 12.37, 5.97, 10.12, 7.77, 7.90, 7.58, 6.46, 10.93, 10.22, 9.74, 8.32, 11.15, 11.67, 7.48, 13.42, 9.67, 8.70, 4.57, 8.19, 9.32, 5.70, 4.83, 6.03, 7.46, 6.91, 10.89, 9.87, 10.67, 8.15, 10.40, 9.47, 7.20, 11.86, 9.42, 8.14, 7.97, 9.27, 11.55, 9.91, 11.66, 11.17, 5.39, 13.11, 11.50, 11.15, 10.38, 7.99, 8.97, 7.62, 6.72, 9.76, 7.59, 12.63, 8.56, 10.87, 10.78, 9.69, 9.97, 6.99, 11.11, 8.16, 10.77, 9.23, 11.10, 5.88, 10.63, 8.82, 5.24, 9.90, 4.76, 11.30, 10.70, 11.49, 7.36, 10.85, 7.57, 4.24, 5.46, 8.24, 9.54, 9.65, 7.47, 9.11, 8.93, 9.43, 7.07, 10.46, 10.57, 6.02, 9.68, 10.09, 9.85, 6.29, 8.12, 9.37, 7.63, 8.80, 8.75, 6.47, 10.22, 8.70, 7.52, 13.12, 4.92, 6.37, 6.28, 8.21, 8.59, 5.09, 7.29, 8.24, 9.03, 9.78, 6.29, 7.12, 7.58, 10.27, 7.22, 11.82, 7.07, 6.88, 7.06, 7.20, 8.24, 11.20, 8.31, 12.78, 8.46, 5.96, 5.37, 8.55, 7.71, 9.61, 11.52, 10.50, 8.98, 10.53, 7.24, 5.58, 7.60, 7.91, 9.46, 7.77, 6.40, 6.40, 9.77, 7.71, 10.61, 7.15, 7.96, 6.50, 9.48, 9.46, 5.52, 11.76, 10.22, 9.69, 9.17, 8.45, 5.15, 8.80, 5.51, 9.70, 10.23, 6.52, 6.96, 10.98, 8.07, 9.84, 9.50, 7.55, 12.55, 11.84, 11.50, 7.41)
k <- 8
probs <- 0:k / k
limites <- qtri(probs, min = 3.5, max = 14, mode = (3.5 + 14)/2)
classes <- cut(dados, breaks = limites)
freq_observadas <- table(classes)
probs <- rep(1 / k, k)
solution <- chisq.test(freq_observadas, p = probs)$p.value
solution
library(ggplot2)
theme_set(theme_gray())
url <- 'https://web.tecnico.ulisboa.pt/~paulo.soares/pe/projeto/Paises_PIB_ICH.csv'
dados <- read.csv(url, check.names = FALSE)
continentes <- c("Europe", "Americas")
paises_especificos <- c("Lithuania", "Iceland", "United States", "Saint Lucia")
dados |>
subset(Continent %in% continentes) |>
ggplot() +
geom_point(aes(GDP, HCI, color = Continent)) +
scale_x_log10() +
geom_text(data = subset(dados, Country %in% paises_especificos),
aes(x = GDP, y = HCI, label = Country),
color = "black") +
labs(title = paste("Human Capital Index vs GDP per capita"),
x = "GDP per capita",
y = "Human Capital Index")
a <- 4
#Abordagem 1 (Valor simulado)
set.seed(1948)
n <- 30
n_sim <- 1000
Y_sim <- numeric(n_sim)
for (i in 1:n_sim) {
X <- rexp(n, rate = 1/a)
Y_sim[i] <- sum(X)
}
prop_Y <- sum(Y_sim > 90) / n_sim
#Abordagem 2 (Valor exato)
a <- 30
b <- 1/4
reliability <- pgamma(90, shape = a, rate = b, lower.tail = FALSE)
#Calcular diferenca
result <- abs(prop_Y - reliability) * 100
result
set.seed(2126)
n <- 4
r <- 150
m <- 130
samples <- matrix(NA, nrow = r, ncol = m)
for (i in 1:r) {
for (j in 1:m) {
z <- rnorm(n+1)
samples[i,j] <- (sqrt(n)*z[1] / sqrt(sum(z[-1]^2)))
}
}
proportions <- apply(samples, 1, function(row) mean(row <= -0.9))
p <- mean(proportions)
direct_p <- pt(-0.9, df = n)
diff_abs <- abs(p - direct_p)*100
diff_abs
a <- 4
#Abordagem 1 (Valor simulado)
set.seed(1948)
n <- 30
n_sim <- 1000
Y_sim <- numeric(n_sim)
for (i in 1:n_sim) {
X <- rexp(n, rate = 1/a)
Y_sim[i] <- sum(X)
}
prop_Y <- sum(Y_sim > 90) / n_sim
#Abordagem 2 (Valor exato)
a <- 30
b <- 1/4
reliability <- pgamma(90, shape = a, rate = b, lower.tail = FALSE)
#Calcular diferenca
result <- abs(prop_Y - reliability) * 100
result
a <- 4
#Abordagem 1 (Valor simulado)
set.seed(1948)
n <- 30
n_sim <- 1000
Y_sim <- numeric(n_sim)
for (i in 1:n_sim) {
X <- rexp(n, rate = 1/a)
Y_sim[i] <- sum(X)
}
prop_Y <- sum(Y_sim > 90) / n_sim
#Abordagem 2 (Valor exato)
a <- 30
b <- 1/4
reliability <- 1 - pgamma(90, shape = a, rate = b, lower.tail = FALSE)
#Calcular diferenca
result <- abs(prop_Y - reliability) * 100
result
a <- 4
#Abordagem 1 (Valor simulado)
set.seed(1948)
n <- 30
n_sim <- 1000
Y_sim <- numeric(n_sim)
for (i in 1:n_sim) {
X <- rexp(n, rate = 1/a)
Y_sim[i] <- sum(X)
}
prop_Y <- sum(Y_sim > 90) / n_sim
#Abordagem 2 (Valor exato)
a <- 30
b <- 1/4
reliability <- (90, a, 1/4)
a <- 4
#Abordagem 1 (Valor simulado)
set.seed(1948)
n <- 30
n_sim <- 1000
Y_sim <- numeric(n_sim)
for (i in 1:n_sim) {
X <- rexp(n, rate = 1/a)
Y_sim[i] <- sum(X)
}
prop_Y <- sum(Y_sim > 90) / n_sim
#Abordagem 2 (Valor exato)
a <- 30
b <- 1/4
reliability <- 1 -(90, a, 1/4)
a <- 4
#Abordagem 1 (Valor simulado)
set.seed(1948)
n <- 30
n_sim <- 1000
Y_sim <- numeric(n_sim)
for (i in 1:n_sim) {
X <- rexp(n, rate = 1/a)
Y_sim[i] <- sum(X)
}
prop_Y <- sum(Y_sim > 90) / n_sim
#Abordagem 2 (Valor exato)
a <- 30
b <- 1/4
reliability <- 1 - pgamma(90, a, 1/4)
#Calcular diferenca
result <- abs(prop_Y - reliability) * 100
result
a <- 4
#Abordagem 1 (Valor simulado)
set.seed(1948)
n <- 30
n_sim <- 1000
Y_sim <- numeric(n_sim)
for (i in 1:n_sim) {
X <- rexp(n, rate = 1/a)
Y_sim[i] <- sum(X)
}
prop_Y <- sum(Y_sim > 90) / n_sim
#Abordagem 2 (Valor exato)
a <- 30
b <- 1/4
reliability <- 1 - pgama(90, a, 1/4)
a <- 4
#Abordagem 1 (Valor simulado)
set.seed(1948)
n <- 30
n_sim <- 1000
Y_sim <- numeric(n_sim)
for (i in 1:n_sim) {
X <- rexp(n, rate = 1/a)
Y_sim[i] <- sum(X)
}
prop_Y <- sum(Y_sim > 90) / n_sim
#Abordagem 2 (Valor exato)
a <- 30
b <- 1/4
reliability <- 1 - pgamma(90, a, 1/4)
#Calcular diferenca
result <- abs(prop_Y - reliability) * 100
result
library(ggplot2)
library(readxl)
theme_set(theme_gray())
# ler os dados do ficheiro excel
data <- readxl::read_excel("Documents/ist/ano2/semestre2/pe/project/electricity.xlsx")
library(ggplot2)
library(readxl)
theme_set(theme_gray())
# ler os dados do ficheiro excel
data <- readxl::read_excel("Documents/ist/ano2/semestre2/pe/project/ex3/electricity.xlsx")
